import { initializeLogger } from './logger.js';
const logger = initializeLogger();
import DataUtils from './DataUtils.js'; // Importar DataUtils para usar sus funciones

const TEMP_DIR = './tmp'; // Aseg√∫rate de que esta ruta sea consistente con la usada en start.js

/**
 * Ejecuta todas las optimizaciones y tareas de limpieza configuradas.
 * @returns {Promise<void>}
 */
export const runAllOptimizations = async () => {
  logger.info('üöÄ Iniciando todas las tareas de optimizaci√≥n...');
  try {
    // Limpieza de archivos temporales
    await DataUtils.cleanTempFiles(TEMP_DIR);

    // Optimizaci√≥n de memoria (simb√≥lica en Node.js)
    DataUtils.forceGarbageCollection();

    // Aqu√≠ se podr√≠an a√±adir otras optimizaciones futuras, como:
    // - Limpieza de cach√© de im√°genes/videos
    // - Compactaci√≥n de la base de datos SQLite (si es necesario y seguro)

    logger.info('‚úÖ Todas las optimizaciones completadas.');
  } catch (error) {
    logger.error({ err: error }, '‚ùå Error durante la ejecuci√≥n de optimizaciones.');
  }
};
