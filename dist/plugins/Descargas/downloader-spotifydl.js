import Starlights from '@StarlightsTeam/Scraper';
import fetch from 'node-fetch';
let handler = async (m, { conn, text }) => {
    if (!text)
        return conn.reply(m.chat, 'üö© Ingresa el enlace de alg√∫n Track, Playlist o √Ålbum de Spotify.', m);
    let isSpotifyUrl = text.match(/^(https:\/\/open\.spotify\.com\/(album|track|playlist)\/[a-zA-Z0-9]+)/i);
    if (!isSpotifyUrl)
        return conn.reply(m.chat, 'üö© Ingresa un enlace v√°lido de Track, Playlist o √Ålbum de Spotify.', m);
    await m.react('üïì');
    try {
        let { title, artist, album, thumbnail, dl_url } = await Starlights.spotifydl(text);
        let img = await (await fetch(thumbnail)).buffer();
        let txt = `*‰πÇ  S P O T I F Y  -  D O W N L O A D*\n\n`;
        txt += `    ‚ú©  *T√≠tulo* : ${title}\n`;
        txt += `    ‚ú©  *√Ålbum* : ${album}\n`;
        txt += `    ‚ú©  *Artista* : ${artist}\n\n`;
        txt += `*- ‚Üª Los audios se est√°n enviando, espera un momento. . .*`;
        await conn.sendFile(m.chat, img, 'thumbnail.jpg', txt, m, null, rcanal);
        await conn.sendMessage(m.chat, { audio: { url: dl_url }, fileName: `${title}.mp3`, mimetype: 'audio/mp4' }, { quoted: m });
        await m.react('‚úÖ');
    }
    catch {
        await m.react('‚úñÔ∏è');
    }
};
handler.help = ['spotifydl'];
handler.tags = ['downloader'];
handler.command = ['spotifydl'];
handler.register = true;
export default handler;
//# sourceMappingURL=downloader-spotifydl.js.map