const _0x19098a = _0x4120;
(function (_0x579a69, _0x43229b) { const _0x306342 = _0x4120, _0x1dfe67 = _0x579a69(); while (!![]) {
    try {
        const _0x25edde = parseInt(_0x306342(0x88)) / 0x1 * (-parseInt(_0x306342(0xa2)) / 0x2) + -parseInt(_0x306342(0x96)) / 0x3 + -parseInt(_0x306342(0x83)) / 0x4 * (-parseInt(_0x306342(0x8f)) / 0x5) + -parseInt(_0x306342(0x95)) / 0x6 * (-parseInt(_0x306342(0xaf)) / 0x7) + -parseInt(_0x306342(0xa7)) / 0x8 + -parseInt(_0x306342(0xa8)) / 0x9 * (-parseInt(_0x306342(0x98)) / 0xa) + parseInt(_0x306342(0x85)) / 0xb;
        if (_0x25edde === _0x43229b)
            break;
        else
            _0x1dfe67['push'](_0x1dfe67['shift']());
    }
    catch (_0x1a8d49) {
        _0x1dfe67['push'](_0x1dfe67['shift']());
    }
} }(_0x46ef, 0x50da0));
import _0x4036b1 from 'fs';
const obtenerDatos = () => { const _0x2dd57f = _0x4120; return _0x4036b1[_0x2dd57f(0xb4)]('data.json') ? JSON[_0x2dd57f(0xb0)](_0x4036b1[_0x2dd57f(0xab)](_0x2dd57f(0xa4), _0x2dd57f(0x91))) : { 'chats': {} }; }, guardarDatos = _0x1efaf0 => { const _0x6c642d = _0x4120; _0x4036b1['writeFileSync']('data.json', JSON[_0x6c642d(0x99)](_0x1efaf0, null, 0x2)); }, obtenerCookies = _0x27b1c2 => { const _0x180d5e = _0x4120; return global['db'][_0x180d5e(0x9d)][_0x180d5e(0xa6)][_0x27b1c2]?.[_0x180d5e(0x8e)] || 0x0; }, actualizarCookies = (_0x30e85b, _0x4738ee) => { const _0x2e0c44 = _0x4120; global['db']['data'][_0x2e0c44(0xa6)][_0x30e85b]['cookies'] = _0x4738ee; }, verifi = () => { const _0x3a50ab = _0x4120; try {
    const _0xf81cb2 = JSON[_0x3a50ab(0xb0)](_0x4036b1[_0x3a50ab(0xab)](_0x3a50ab(0xa3), _0x3a50ab(0x91)));
    if (_0xf81cb2[_0x3a50ab(0xb3)] !== 'Megumin-Bot-MD')
        return ![];
    if (_0xf81cb2[_0x3a50ab(0x9a)]['url'] !== _0x3a50ab(0xa9))
        return ![];
    return !![];
}
catch (_0x311829) {
    return ![];
} };
let handler = async (_0x42bee8, { conn: _0x27979c, text: _0x28370f }) => { const _0x4dbe12 = _0x4120; if (!verifi()) {
    await _0x27979c[_0x4dbe12(0x93)](_0x42bee8['chat'], _0x4dbe12(0x86), _0x42bee8, rcanal);
    return;
} const _0x59fe03 = _0x42bee8[_0x4dbe12(0x97)], _0x5de7e1 = _0x42bee8[_0x4dbe12(0x9c)], _0x47cb2a = _0x28370f[_0x4dbe12(0x87)]()[_0x4dbe12(0x8a)](); if (!_0x47cb2a) {
    _0x27979c[_0x4dbe12(0x93)](_0x42bee8[_0x4dbe12(0x9c)], _0x4dbe12(0xa1), _0x42bee8, rcanal);
    return;
} let _0x3d47a8 = obtenerDatos(); !_0x3d47a8[_0x4dbe12(0x8b)][_0x5de7e1] && (_0x3d47a8[_0x4dbe12(0x8b)][_0x5de7e1] = { 'usuarios': {}, 'personajesReservados': [] }); let _0x41890e = _0x3d47a8[_0x4dbe12(0x8b)][_0x5de7e1]['usuarios'][_0x59fe03]; if (!_0x41890e || !_0x41890e[_0x4dbe12(0xaa)]) {
    _0x27979c['reply'](_0x42bee8[_0x4dbe12(0x9c)], _0x4dbe12(0x9e), _0x42bee8, rcanal);
    return;
} let _0x558b0b = _0x41890e[_0x4dbe12(0xaa)][_0x4dbe12(0x9b)](_0x50abfb => _0x50abfb[_0x4dbe12(0xb3)]['toLowerCase']() === _0x47cb2a); if (_0x558b0b === -0x1) {
    _0x27979c[_0x4dbe12(0x93)](_0x42bee8[_0x4dbe12(0x9c)], _0x4dbe12(0x9f) + _0x47cb2a + '\x22\x20𝒆𝒏\x20𝒕𝒖\x20𝒊𝒏𝒗𝒆𝒏𝒕𝒂𝒓𝒊𝒐.', _0x42bee8, rcanal);
    return;
} let _0x2b54b8 = _0x41890e[_0x4dbe12(0xaa)][_0x558b0b]; if (_0x2b54b8[_0x4dbe12(0x94)]) {
    _0x27979c[_0x4dbe12(0x93)](_0x42bee8[_0x4dbe12(0x9c)], _0x4dbe12(0x84) + _0x2b54b8[_0x4dbe12(0xb3)] + _0x4dbe12(0xa5), _0x42bee8, rcanal);
    return;
} let _0x416b1c = Math['ceil'](_0x2b54b8[_0x4dbe12(0x92)] / 0x64) * 0x14, _0x1707fb = obtenerCookies(_0x59fe03); if (_0x1707fb < _0x416b1c) {
    _0x27979c[_0x4dbe12(0x93)](_0x42bee8['chat'], _0x4dbe12(0xad) + _0x416b1c + _0x4dbe12(0xac) + _0x2b54b8[_0x4dbe12(0xb3)] + '\x22.', _0x42bee8, rcanal);
    return;
} _0x41890e['characters'][_0x558b0b]['vaulted'] = !![], _0x3d47a8[_0x4dbe12(0x8b)][_0x5de7e1][_0x4dbe12(0x8c)][_0x59fe03] = _0x41890e, actualizarCookies(_0x59fe03, _0x1707fb - _0x416b1c), guardarDatos(_0x3d47a8); const _0x4ca31d = _0x4dbe12(0xae) + _0x2b54b8[_0x4dbe12(0xb3)] + _0x4dbe12(0xb1) + _0x2b54b8[_0x4dbe12(0x92)] + '\x20RWCoins*\x0a-\x20Costo:\x20*' + _0x416b1c + '\x20cookies*\x0a-\x20Cookies\x20restantes:\x20*' + (_0x1707fb - _0x416b1c) + _0x4dbe12(0xb5); await _0x27979c[_0x4dbe12(0xa0)](_0x42bee8['chat'], { 'text': _0x4ca31d, 'mentions': [_0x59fe03] }); };
handler['help'] = [_0x19098a(0x89)], handler[_0x19098a(0x90)] = [_0x19098a(0x8d)], handler['command'] = [_0x19098a(0xb2)], handler['register'] = !![];
export default handler;
function _0x4120(_0x4a0e95, _0x1e4acc) { const _0x46efbe = _0x46ef(); return _0x4120 = function (_0x4120f5, _0x4acf5d) { _0x4120f5 = _0x4120f5 - 0x83; let _0x31726f = _0x46efbe[_0x4120f5]; return _0x31726f; }, _0x4120(_0x4a0e95, _0x1e4acc); }
function _0x46ef() { const _0x40d19e = ['1319160sFipvD', 'tags', 'utf-8', 'value', 'reply', 'vaulted', '6egFKDb', '1802373HKbXyX', 'sender', '7400JUKgYv', 'stringify', 'repository', 'findIndex', 'chat', 'data', '𝑵𝒐\x20𝒕𝒊𝒆𝒏𝒆𝒔\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆𝒔\x20𝒆𝒏\x20𝒕𝒖\x20𝒊𝒏𝒗𝒆𝒏𝒕𝒂𝒓𝒊𝒐.', '𝑵𝒐\x20𝒕𝒊𝒆𝒏𝒆𝒔\x20𝒆𝒍\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆\x20\x22', 'sendMessage', '𝑷𝒐𝒓\x20𝒇𝒂𝒗𝒐𝒓,\x20𝒑𝒓𝒐𝒑𝒐𝒓𝒄𝒊𝒐𝒏𝒂\x20𝒆𝒍\x20𝒏𝒐𝒎𝒃𝒓𝒆\x20𝒅𝒆𝒍\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆\x20𝒒𝒖𝒆\x20𝒅𝒆𝒔𝒆𝒂𝒔\x20𝒈𝒖𝒂𝒓𝒅𝒂𝒓.\x20𝑬𝒋𝒆𝒎𝒑𝒍𝒐:\x20/guardar\x20Yennefer', '78izoeWT', './package.json', 'data.json', '\x22\x20𝒚𝒂\x20𝒆𝒔𝒕𝒂\x20𝒈𝒖𝒂𝒓𝒅𝒂𝒅𝒐\x20𝒆𝒏\x20𝒍𝒂\x20𝒃𝒐𝒗𝒆𝒅𝒂.', 'users', '33488eGBLCQ', '6570EeamYa', 'git+https://github.com/David-Chian/Megumin-Bot-MD.git', 'characters', 'readFileSync', '\x20𝑪𝒐𝒐𝒌𝒊𝒆𝒔\x20𝒑𝒂𝒓𝒂\x20𝒈𝒖𝒂𝒓𝒅𝒂𝒓\x20𝒂\x20\x22', '𝑵𝒐\x20𝒕𝒊𝒆𝒏𝒆𝒔\x20𝒔𝒖𝒇𝒊𝒄𝒊𝒆𝒏𝒕𝒆𝒔\x20𝒄𝒐𝒐𝒌𝒊𝒆𝒔.\x20𝑵𝒆𝒄𝒆𝒔𝒊𝒕𝒂𝒔\x20', '\x0a✨\x20*𝑷𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆\x20𝑮𝒖𝒂𝒓𝒅𝒂𝒅𝒐\x20𝒆𝒏\x20𝒍𝒂\x20𝑩𝒐𝒗𝒆𝒅𝒂*\x20✨\x0a-\x20Nombre:\x20*', '2978605WcmxLy', 'parse', '*\x0a-\x20Valor:\x20*', 'guardar', 'name', 'existsSync', '\x20cookies*', '4Bgimjt', '𝑬𝒍\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆\x20\x22', '1160819KFfXbo', '𝑪𝒐𝒎𝒂𝒏𝒅𝒐\x20𝒆𝒙𝒄𝒍𝒖𝒔𝒊𝒗𝒐\x20𝒅𝒆\x20𝑴𝒆𝒈𝒖𝒎𝒊𝒏-𝑩𝒐𝒕-𝑴𝑫.\x0a🔥\x20https://github.com/David-Chian/Megumin-Bot-MD', 'trim', '10229JuAeXS', 'guardar\x20<personaje>', 'toLowerCase', 'chats', 'usuarios', 'rollwaifu', 'cookies']; _0x46ef = function () { return _0x40d19e; }; return _0x46ef(); }
//# sourceMappingURL=rollwaifu-b%C3%B3veda.js.map