const _0x2e3020 = _0xd753;
function _0xd753(_0x399f7e, _0x480d22) { const _0x421acc = _0x421a(); return _0xd753 = function (_0xd753c6, _0x50de47) { _0xd753c6 = _0xd753c6 - 0xac; let _0x214c50 = _0x421acc[_0xd753c6]; return _0x214c50; }, _0xd753(_0x399f7e, _0x480d22); }
(function (_0x4e951a, _0xb29878) { const _0x1aea94 = _0xd753, _0x27637d = _0x4e951a(); while (!![]) {
    try {
        const _0x2ab2ca = parseInt(_0x1aea94(0xdd)) / 0x1 * (parseInt(_0x1aea94(0xc5)) / 0x2) + parseInt(_0x1aea94(0xb1)) / 0x3 * (parseInt(_0x1aea94(0xb7)) / 0x4) + -parseInt(_0x1aea94(0xd8)) / 0x5 * (parseInt(_0x1aea94(0xe0)) / 0x6) + -parseInt(_0x1aea94(0xcc)) / 0x7 * (parseInt(_0x1aea94(0xc6)) / 0x8) + parseInt(_0x1aea94(0xb5)) / 0x9 + -parseInt(_0x1aea94(0xc0)) / 0xa + -parseInt(_0x1aea94(0xc1)) / 0xb * (-parseInt(_0x1aea94(0xd4)) / 0xc);
        if (_0x2ab2ca === _0xb29878)
            break;
        else
            _0x27637d['push'](_0x27637d['shift']());
    }
    catch (_0x50b57a) {
        _0x27637d['push'](_0x27637d['shift']());
    }
} }(_0x421a, 0x6c01d));
function hi() { const _0x5109a2 = _0xd753; console['log'](_0x5109a2(0xdf)); }
hi();
import _0x2bb07c from 'fs';
function _0x421a() { const _0x27a4a1 = ['length', 'userId', 'repository', 'data.json', 'Error\x20al\x20leer\x20characters.json:', 'sender', '\x0a●\x20_*ᑎOᗰᗷᖇE:*_\x0a⋗\x20*', 'Megumin-Bot-MD', 'Error\x20al\x20leer\x20data.json:', 'usuarios', 'git+https://github.com/David-Chian/Megumin-Bot-MD.git', 'error', 'roll', 'personajesReservados', '23070mRiswB', 'chat', 'help', '𝑶𝒄𝒖𝒓𝒓𝒊𝒐\x20𝒖𝒏\x20𝒆𝒓𝒓𝒐𝒓\x20𝒂𝒍\x20𝒑𝒓𝒐𝒄𝒆𝒔𝒂𝒓\x20𝒕𝒖\x20𝒔𝒐𝒍𝒊𝒄𝒊𝒕𝒖𝒅.\x20𝑰𝒏𝒕𝒆𝒏𝒕𝒂\x20𝒅𝒆\x20𝒏𝒖𝒆𝒗𝒐\x20𝒎𝒂𝒔\x20𝒕𝒂𝒓𝒅𝒆.\x20', '2340900tWjLrb', 'Reservado\x20por\x20', '4jOGceZ', 'floor', './package.json', '*\x20_*ᗯᖴcoins*_!\x0a★\x20_*ESTᗩᗪO*_\x0a⋗\x20*Estado:\x20', '\x20𝑴𝒊𝒏𝒖𝒕𝒐𝒔\x20𝒚\x20', '𝑭𝒆𝒍𝒊𝒄𝒊𝒅𝒂𝒅𝒆𝒔,\x20𝒕𝒐𝒅𝒐𝒔\x20𝒍𝒐𝒔\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆𝒔\x20𝒉𝒂𝒏\x20𝒔𝒊𝒅𝒐\x20𝒐𝒃𝒕𝒆𝒏𝒊𝒅𝒐𝒔.\x20¡𝑷𝒓𝒐𝒏𝒕𝒐\x20𝒉𝒂𝒃𝒓𝒂\x20𝒎𝒂𝒔\x20𝒘𝒂𝒊𝒇𝒖𝒔\x20𝒑𝒂𝒓𝒂\x20𝒓𝒆𝒄𝒐𝒍𝒆𝒄𝒕𝒂𝒓!', 'chats', 'stringify', 'utf-8', '1822410arSeZs', '462726amEOJE', 'some', '¡𝐸𝑠𝑝𝑒𝑟𝑎\x20𝑢𝑛\x20𝑝𝑜𝑐𝑜\x20𝑚𝑎𝑠\x20𝑝𝑎𝑟𝑎\x20𝑝𝑜𝑑𝑒𝑟\x20𝑢𝑠𝑎𝑟\x20𝑒𝑠𝑡𝑒\x20𝑐𝑜𝑚𝑎𝑛𝑑𝑜!\x0a\x0a*𝑻𝒊𝒆𝒎𝒑𝒐\x20𝒓𝒆𝒔𝒕𝒂𝒏𝒕𝒆\x20', './lib/characters.json', '972SYTJLp', '17968iikZrg', 'image/jpeg', 'parse', 'command', 'writeFileSync', 'getTime', '224MpIcjN', '*\x0a\x0a>\x20✷\x20\x20\x20\x20𝙄𝙙𝙚𝙣𝙩𝙞𝙛𝙞𝙘𝙖𝙙𝙤𝙧\x0a<id:', 'entries', 'filter', 'readFileSync', 'sendMessage', 'value', 'push', '60wBjaxY', 'Error\x20al\x20leer\x20package.json:', 'tags', 'find', '2608940xfoYcR', 'https://qu.ax/Qyawv.jpg', 'url', 'reply', 'characters', '1523YNRODP', '\x20𝑺𝒆𝒈𝒖𝒏𝒅𝒐𝒔.*', 'Hello\x20World!', '6fGscLQ', 'name', 'register', '𝑬𝒔𝒕𝒆\x20𝒄𝒐𝒎𝒂𝒏𝒅𝒐\x20𝒔𝒐𝒍𝒐\x20𝒆𝒔𝒕𝒂\x20𝒅𝒊𝒔𝒑𝒐𝒏𝒊𝒃𝒍𝒆\x20𝒑𝒂𝒓𝒂\x20𝑴𝒆𝒈𝒖𝒎𝒊𝒏-𝑩𝒐𝒕-𝑴𝑫.\x0a\x20🔥\x20https://github.com/David-Chian/Megumin-Bot-MD', 'rollwaifu']; _0x421a = function () { return _0x27a4a1; }; return _0x421a(); }
import { v4 as _0x526309 } from 'uuid';
const completadoImage = _0x2e3020(0xd9), obtenerDatos = () => { const _0x3fbeaa = _0x2e3020; try {
    return _0x2bb07c['existsSync']('data.json') ? JSON[_0x3fbeaa(0xc8)](_0x2bb07c['readFileSync'](_0x3fbeaa(0xe8), _0x3fbeaa(0xbf))) : { 'chats': {} };
}
catch (_0x374834) {
    return console[_0x3fbeaa(0xae)](_0x3fbeaa(0xed), _0x374834), { 'chats': {} };
} }, guardarDatos = _0x2f4fe4 => { const _0x29cda9 = _0x2e3020; try {
    _0x2bb07c[_0x29cda9(0xca)](_0x29cda9(0xe8), JSON[_0x29cda9(0xbe)](_0x2f4fe4, null, 0x2));
}
catch (_0x30850e) {
    console[_0x29cda9(0xae)]('Error\x20al\x20escribir\x20en\x20data.json:', _0x30850e);
} }, obtenerPersonajes = () => { const _0x13bbf1 = _0x2e3020; try {
    return JSON[_0x13bbf1(0xc8)](_0x2bb07c['readFileSync'](_0x13bbf1(0xc4), _0x13bbf1(0xbf)));
}
catch (_0x5a22a8) {
    return console['error'](_0x13bbf1(0xe9), _0x5a22a8), [];
} };
let cooldowns = {}, handler = async (_0x39711c, { conn: _0x1f666c }) => { const _0x22ef71 = _0x2e3020; try {
    let _0x679ef9 = obtenerDatos(), _0x2c78f4 = _0x39711c[_0x22ef71(0xb2)], _0x5a1bc4 = _0x39711c[_0x22ef71(0xea)], _0x7a8e65 = new Date()[_0x22ef71(0xcb)](), _0x1d2bf3 = 0xa * 0x3c * 0x3e8, _0x3b9082 = cooldowns[_0x5a1bc4] || 0x0, _0x16bf87 = _0x7a8e65 - _0x3b9082;
    if (_0x16bf87 < _0x1d2bf3) {
        let _0x3f99a4 = _0x1d2bf3 - _0x16bf87, _0x106178 = Math['floor'](_0x3f99a4 / (0x3e8 * 0x3c)), _0x41095e = Math[_0x22ef71(0xb8)](_0x3f99a4 % (0x3e8 * 0x3c) / 0x3e8), _0x4b3684 = _0x22ef71(0xc3) + _0x106178 + _0x22ef71(0xbb) + _0x41095e + _0x22ef71(0xde);
        await _0x1f666c[_0x22ef71(0xd1)](_0x39711c['chat'], { 'text': _0x4b3684 });
        return;
    }
    const _0x14ff73 = (_0x87ca82, _0x221600, _0x3a6d69) => { const _0x419317 = _0x22ef71; let _0x226323 = obtenerDatos(); !_0x226323[_0x419317(0xbd)][_0x87ca82] && (_0x226323[_0x419317(0xbd)][_0x87ca82] = { 'usuarios': {}, 'personajesReservados': [] }), _0x226323[_0x419317(0xbd)][_0x87ca82][_0x419317(0xb0)][_0x419317(0xd3)]({ 'userId': _0x221600, ..._0x3a6d69 }), guardarDatos(_0x226323); }, _0x2962e6 = _0x1dfeaa => { const _0x5f5d8a = _0x22ef71; let _0x551336 = obtenerPersonajes(), _0x4ba46b = _0x551336[_0x5f5d8a(0xcf)](_0x27a5b7 => { const _0x320704 = _0x5f5d8a; let _0x522ba4 = _0x679ef9[_0x320704(0xbd)][_0x1dfeaa]?.[_0x320704(0xb0)][_0x320704(0xc2)](_0x101ca4 => _0x101ca4[_0x320704(0xda)] === _0x27a5b7[_0x320704(0xda)]), _0x57762d = Object['values'](_0x679ef9[_0x320704(0xbd)][_0x1dfeaa]?.[_0x320704(0xac)] || {})[_0x320704(0xc2)](_0x36a5d4 => _0x36a5d4[_0x320704(0xdc)][_0x320704(0xc2)](_0x41ca2f => _0x41ca2f[_0x320704(0xda)] === _0x27a5b7[_0x320704(0xda)])); return !_0x522ba4 && !_0x57762d; }); return _0x4ba46b; }, _0x14a235 = () => { const _0x29a2fb = _0x22ef71; try {
        const _0x29be12 = JSON[_0x29a2fb(0xc8)](_0x2bb07c[_0x29a2fb(0xd0)](_0x29a2fb(0xb9), _0x29a2fb(0xbf)));
        if (_0x29be12['name'] !== _0x29a2fb(0xec))
            return ![];
        if (_0x29be12[_0x29a2fb(0xe7)][_0x29a2fb(0xda)] !== _0x29a2fb(0xad))
            return ![];
        return !![];
    }
    catch (_0x544b32) {
        return console['error'](_0x29a2fb(0xd5), _0x544b32), ![];
    } };
    if (!_0x14a235()) {
        await _0x1f666c[_0x22ef71(0xdb)](_0x39711c[_0x22ef71(0xb2)], _0x22ef71(0xe3), _0x39711c, rcanal);
        return;
    }
    let _0x423ed1 = _0x2962e6(_0x2c78f4);
    if (_0x423ed1[_0x22ef71(0xe5)] === 0x0) {
        await _0x1f666c[_0x22ef71(0xd1)](_0x39711c[_0x22ef71(0xb2)], { 'image': { 'url': completadoImage }, 'caption': _0x22ef71(0xbc) });
        return;
    }
    const _0x33f332 = _0x423ed1[Math[_0x22ef71(0xb8)](Math['random']() * _0x423ed1[_0x22ef71(0xe5)])], _0x590c68 = _0x526309();
    let _0x3def17 = _0x679ef9[_0x22ef71(0xbd)][_0x2c78f4]?.[_0x22ef71(0xb0)][_0x22ef71(0xd7)](_0x5120ba => _0x5120ba[_0x22ef71(0xda)] === _0x33f332[_0x22ef71(0xda)]), _0x509dac = Object[_0x22ef71(0xce)](_0x679ef9[_0x22ef71(0xbd)][_0x2c78f4]?.[_0x22ef71(0xac)] || {})[_0x22ef71(0xd7)](([_0x18c318, _0x52966b]) => _0x52966b['characters'][_0x22ef71(0xc2)](_0x5502d5 => _0x5502d5[_0x22ef71(0xda)] === _0x33f332[_0x22ef71(0xda)])), _0x46655c;
    if (_0x509dac)
        _0x46655c = 'Ocupado\x20por\x20' + _0x509dac[0x1][_0x22ef71(0xe1)];
    else
        _0x3def17 ? _0x46655c = _0x22ef71(0xb6) + _0x3def17[_0x22ef71(0xe6)] : _0x46655c = 'Libre';
    const _0x5a9acc = _0x22ef71(0xeb) + _0x33f332[_0x22ef71(0xe1)] + '!*\x0a✦\x20_*ᐯᗩᒪOᖇ:*_\x0a⋗\x20*' + _0x33f332[_0x22ef71(0xd2)] + _0x22ef71(0xba) + _0x46655c + _0x22ef71(0xcd) + _0x590c68 + '>';
    await _0x1f666c[_0x22ef71(0xd1)](_0x39711c[_0x22ef71(0xb2)], { 'image': { 'url': _0x33f332[_0x22ef71(0xda)] }, 'caption': _0x5a9acc, 'mimetype': _0x22ef71(0xc7), 'mentionedJid': _0x509dac ? [_0x509dac[0x1]] : [] }, { 'quoted': _0x39711c }), !_0x509dac && _0x14ff73(_0x2c78f4, _0x5a1bc4, { ..._0x33f332, 'id': _0x590c68 }), cooldowns[_0x5a1bc4] = _0x7a8e65;
}
catch (_0x3aa817) {
    console[_0x22ef71(0xae)]('Error\x20en\x20el\x20handler:', _0x3aa817), await _0x1f666c[_0x22ef71(0xd1)](_0x39711c[_0x22ef71(0xb2)], { 'text': _0x22ef71(0xb4) + _0x3aa817 });
} };
handler[_0x2e3020(0xb3)] = [_0x2e3020(0xaf)], handler[_0x2e3020(0xd6)] = [_0x2e3020(0xe4)], handler[_0x2e3020(0xc9)] = [_0x2e3020(0xaf), 'rw'], handler[_0x2e3020(0xe2)] = !![];
export default handler;
//# sourceMappingURL=rollwaifu-rw.js.map