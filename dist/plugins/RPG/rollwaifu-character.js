const _0x2bdb3d = _0x4395;
(function (_0x1b35cd, _0x5b533b) { const _0x2b1241 = _0x4395, _0x260e1b = _0x1b35cd(); while (!![]) {
    try {
        const _0x129926 = -parseInt(_0x2b1241(0xd0)) / 0x1 * (parseInt(_0x2b1241(0xe4)) / 0x2) + -parseInt(_0x2b1241(0xe9)) / 0x3 * (-parseInt(_0x2b1241(0xca)) / 0x4) + -parseInt(_0x2b1241(0xc4)) / 0x5 + parseInt(_0x2b1241(0xe6)) / 0x6 * (parseInt(_0x2b1241(0xd9)) / 0x7) + -parseInt(_0x2b1241(0xdb)) / 0x8 + -parseInt(_0x2b1241(0xd4)) / 0x9 * (-parseInt(_0x2b1241(0xe3)) / 0xa) + -parseInt(_0x2b1241(0xd3)) / 0xb * (-parseInt(_0x2b1241(0xc9)) / 0xc);
        if (_0x129926 === _0x5b533b)
            break;
        else
            _0x260e1b['push'](_0x260e1b['shift']());
    }
    catch (_0x3e6a45) {
        _0x260e1b['push'](_0x260e1b['shift']());
    }
} }(_0x53a5, 0x3530a));
import _0xe72223 from 'fs';
const obtenerDatos = () => { const _0x25225e = _0x4395; return _0xe72223[_0x25225e(0xd1)](_0x25225e(0xce)) ? JSON[_0x25225e(0xdc)](_0xe72223[_0x25225e(0xed)](_0x25225e(0xce), _0x25225e(0xe0))) : { 'chats': {} }; }, obtenerPersonajes = () => { const _0x354aaf = _0x4395; return _0xe72223[_0x354aaf(0xd1)](_0x354aaf(0xf0)) ? JSON[_0x354aaf(0xdc)](_0xe72223[_0x354aaf(0xed)](_0x354aaf(0xf0), 'utf-8')) : []; }, verifi = () => { const _0x2d5fbc = _0x4395; try {
    const _0x365ac1 = JSON[_0x2d5fbc(0xdc)](_0xe72223[_0x2d5fbc(0xed)](_0x2d5fbc(0xe8), _0x2d5fbc(0xe0)));
    if (_0x365ac1['name'] !== _0x2d5fbc(0xf1))
        return ![];
    if (_0x365ac1['repository'][_0x2d5fbc(0xd5)] !== _0x2d5fbc(0xcb))
        return ![];
    return !![];
}
catch (_0x15dbbe) {
    return ![];
} };
function _0x4395(_0x435f60, _0x38ac24) { const _0x53a582 = _0x53a5(); return _0x4395 = function (_0x4395fa, _0x5997e5) { _0x4395fa = _0x4395fa - 0xc4; let _0x160fc2 = _0x53a582[_0x4395fa]; return _0x160fc2; }, _0x4395(_0x435f60, _0x38ac24); }
function _0x53a5() { const _0x22982a = ['some', '929257oezWvt', 'command', '46024BAlObV', 'parse', 'character', 'rollwaifu', '𝑬𝒔𝒕𝒆\x20𝒆𝒔\x20𝒕𝒖\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆.\x0a\x20*', 'utf-8', 'toLowerCase', 'characters', '18140QANwYi', '4XKNSTh', '\x20𝒆𝒏\x20𝒕𝒖\x20𝒊𝒏𝒗𝒆𝒏𝒕𝒂𝒓𝒊𝒐.', '6BwQgby', '𝑷𝒐𝒓\x20𝒇𝒂𝒗𝒐𝒓,\x20𝒑𝒓𝒐𝒑𝒐𝒓𝒄𝒊𝒐𝒏𝒂\x20𝒆𝒍\x20𝒏𝒐𝒎𝒃𝒓𝒆\x20𝒅𝒆𝒍\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆\x20𝒒𝒖𝒆\x20𝒅𝒆𝒔𝒆𝒂𝒔\x20𝒗𝒆𝒓.\x20𝑬𝒋𝒆𝒎𝒑𝒍𝒐:\x20.𝒄𝒉𝒂𝒓𝒂𝒄𝒕𝒆𝒓\x20𝑴𝒆𝒈𝒖𝒎𝒊𝒏', './package.json', '303843JiZmkt', 'name', 'sender', 'usuarios', 'readFileSync', 'chats', 'value', './lib/characters.json', 'Megumin-Bot-MD', '𝑬𝒔𝒕𝒆\x20𝒄𝒐𝒎𝒂𝒏𝒅𝒐\x20𝒔𝒐𝒍𝒐\x20𝒆𝒔𝒕𝒂\x20𝒅𝒊𝒔𝒑𝒐𝒏𝒊𝒃𝒍𝒆\x20𝒑𝒂𝒓𝒂\x20𝑴𝒆𝒈𝒖𝒎𝒊𝒏-𝑩𝒐𝒕-𝑴𝑫.\x0a\x20🔥\x20https://github.com/David-Chian/Megumin-Bot-MD', '987320SYqKhV', '\x20𝑹𝑾𝒄𝒐𝒊𝒏𝒔.', 'chat', 'tags', 'help', '696WHZiPb', '16ffXmHH', 'git+https://github.com/David-Chian/Megumin-Bot-MD.git', '𝑵𝒐\x20𝒕𝒊𝒆𝒏𝒆𝒔\x20𝒆𝒍\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆\x20', 'image/jpeg', 'data.json', 'reply', '131711pEhktp', 'existsSync', 'sendMessage', '6479UWNTBN', '558EvnqTD', 'url', '*\x0a𝑺𝒖\x20𝒗𝒂𝒍𝒐𝒓\x20𝒆𝒔:\x20', 'register']; _0x53a5 = function () { return _0x22982a; }; return _0x53a5(); }
let handler = async (_0x576e3e, { conn: _0x5b33d0, text: _0x4641dc }) => { const _0x4c7343 = _0x4395; if (!_0x4641dc) {
    _0x5b33d0[_0x4c7343(0xcf)](_0x576e3e[_0x4c7343(0xc6)], _0x4c7343(0xe7), _0x576e3e, rcanal);
    return;
} if (!verifi()) {
    await _0x5b33d0[_0x4c7343(0xcf)](_0x576e3e[_0x4c7343(0xc6)], _0x4c7343(0xf2), _0x576e3e, rcanal);
    return;
} const _0x28dfc2 = _0x576e3e[_0x4c7343(0xeb)], _0xba0f33 = _0x576e3e[_0x4c7343(0xc6)], _0x50d4e1 = _0x4641dc['trim']()[_0x4c7343(0xe1)](), _0x1559fe = obtenerDatos(), _0x49a275 = obtenerPersonajes(); if (!_0x1559fe['chats'][_0xba0f33] || !_0x1559fe[_0x4c7343(0xee)][_0xba0f33][_0x4c7343(0xec)][_0x28dfc2] || !_0x1559fe[_0x4c7343(0xee)][_0xba0f33][_0x4c7343(0xec)][_0x28dfc2][_0x4c7343(0xe2)][_0x4c7343(0xd8)](_0x7a47b4 => _0x7a47b4[_0x4c7343(0xea)][_0x4c7343(0xe1)]() === _0x50d4e1)) {
    _0x5b33d0[_0x4c7343(0xcf)](_0x576e3e['chat'], _0x4c7343(0xcc) + _0x50d4e1 + _0x4c7343(0xe5), _0x576e3e, rcanal);
    return;
} const _0x1b7ac6 = _0x1559fe[_0x4c7343(0xee)][_0xba0f33][_0x4c7343(0xec)][_0x28dfc2][_0x4c7343(0xe2)]['find'](_0x5a0def => _0x5a0def['name']['toLowerCase']() === _0x50d4e1); if (!_0x1b7ac6) {
    _0x5b33d0[_0x4c7343(0xcf)](_0x576e3e[_0x4c7343(0xc6)], '𝑵𝒐\x20𝒔𝒆\x20𝒆𝒏𝒄𝒐𝒏𝒕𝒓𝒐\x20𝒊𝒏𝒇𝒐𝒓𝒎𝒂𝒄𝒊𝒐𝒏\x20𝒑𝒂𝒓𝒂\x20𝒆𝒍\x20𝒑𝒆𝒓𝒔𝒐𝒏𝒂𝒋𝒆\x20' + _0x50d4e1 + '.', _0x576e3e, rcanal);
    return;
} const _0x27880c = _0x4c7343(0xdf) + _0x1b7ac6['name'] + _0x4c7343(0xd6) + _0x1b7ac6[_0x4c7343(0xef)] + _0x4c7343(0xc5); await _0x5b33d0[_0x4c7343(0xd2)](_0x576e3e[_0x4c7343(0xc6)], { 'image': { 'url': _0x1b7ac6[_0x4c7343(0xd5)] }, 'caption': _0x27880c, 'mimetype': _0x4c7343(0xcd) }); };
handler[_0x2bdb3d(0xc8)] = ['character'], handler[_0x2bdb3d(0xc7)] = [_0x2bdb3d(0xde)], handler[_0x2bdb3d(0xda)] = [_0x2bdb3d(0xdd)], handler[_0x2bdb3d(0xd7)] = !![];
export default handler;
//# sourceMappingURL=rollwaifu-character.js.map