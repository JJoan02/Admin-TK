const _0x465be3 = _0x3a99;
function _0x3a99(_0x414f32, _0x264883) { const _0x54469e = _0x5446(); return _0x3a99 = function (_0x3a990c, _0x2b0b80) { _0x3a990c = _0x3a990c - 0xeb; let _0x52bf84 = _0x54469e[_0x3a990c]; return _0x52bf84; }, _0x3a99(_0x414f32, _0x264883); }
(function (_0x2741fb, _0x59b523) { const _0x164729 = _0x3a99, _0x131445 = _0x2741fb(); while (!![]) {
    try {
        const _0x29c849 = -parseInt(_0x164729(0xfc)) / 0x1 + parseInt(_0x164729(0xeb)) / 0x2 * (-parseInt(_0x164729(0x119)) / 0x3) + parseInt(_0x164729(0x113)) / 0x4 * (parseInt(_0x164729(0xf4)) / 0x5) + -parseInt(_0x164729(0x103)) / 0x6 + parseInt(_0x164729(0x11c)) / 0x7 * (parseInt(_0x164729(0xed)) / 0x8) + parseInt(_0x164729(0xf9)) / 0x9 * (-parseInt(_0x164729(0x102)) / 0xa) + -parseInt(_0x164729(0xfd)) / 0xb * (-parseInt(_0x164729(0xff)) / 0xc);
        if (_0x29c849 === _0x59b523)
            break;
        else
            _0x131445['push'](_0x131445['shift']());
    }
    catch (_0x57ced8) {
        _0x131445['push'](_0x131445['shift']());
    }
} }(_0x5446, 0xc89d1));
function _0x5446() { const _0x14bbc4 = ['chat', '1438820EOynmh', '9311430LYSyuF', 'git+https://github.com/David-Chian/Megumin-Bot-MD.git', 'sender', 'command', 'readFileSync', 'ginfo', 'max', 'characters', 'repository', '%\x0a│𝙏𝙤𝙩𝙖𝙡\x20𝙙𝙚\x20𝙒𝙁𝙘𝙤𝙞𝙣𝙨:\x0a│\x20', 'parse', 'ceil', 'Megumin-Bot-MD', '𝑪𝒐𝒎𝒂𝒏𝒅𝒐\x20𝒆𝒙𝒄𝒍𝒖𝒔𝒊𝒗𝒐\x20𝒅𝒆\x20𝑴𝒆𝒈𝒖𝒎𝒊𝒏-𝑩𝒐𝒕-𝑴𝑫.\x20🔥\x20https://github.com/David-Chian/Megumin-Bot-MD', './lib/characters.json', 'return', '1934716YBXOgr', 'atrás', 'utf-8', 'siguiente', 'usuarios', 'slice', '873nNepgY', 'url', '\x0a𝙋𝙖́𝙜𝙞𝙣𝙖\x20', '887061ORyHiZ', 'add', '\x20WF\x20♡\x0a│𝙋𝙚𝙧𝙨𝙤𝙣𝙖𝙟𝙚𝙨\x20𝙙𝙞𝙨𝙥𝙤𝙣𝙞𝙗𝙡𝙚𝙨:\x0a⎆\x20', 'min', 'data.json', '8082vPeVLY', 'currentPage', '64bCPZZF', 'has', 'atras', 'existsSync', 'chats', 'obtenidos', 'reply', '10tFhRWB', '\x20en\x20total.\x0a│𝙋𝙤𝙧𝙘𝙚𝙣𝙩𝙖𝙟𝙚:\x0a⎆\x20', './package.json', 'name', 'nex', '18LJRfAs', 'rollwaifu', 'session', '482373uzAAgT', '247346LrTWSu', 'join', '1248hAbmRR', 'length']; _0x5446 = function () { return _0x14bbc4; }; return _0x5446(); }
import _0x34afcc from 'fs';
const obtenerDatos = () => { const _0x3edaa = _0x3a99; return _0x34afcc[_0x3edaa(0xf0)](_0x3edaa(0x120)) ? JSON[_0x3edaa(0x10d)](_0x34afcc[_0x3edaa(0x107)](_0x3edaa(0x120), _0x3edaa(0x115))) : { 'chats': {} }; }, verifi = () => { const _0x8ea766 = _0x3a99; try {
    const _0x33322b = JSON[_0x8ea766(0x10d)](_0x34afcc[_0x8ea766(0x107)](_0x8ea766(0xf6), _0x8ea766(0x115)));
    if (_0x33322b[_0x8ea766(0xf7)] !== _0x8ea766(0x10f))
        return ![];
    if (_0x33322b[_0x8ea766(0x10b)][_0x8ea766(0x11a)] !== _0x8ea766(0x104))
        return ![];
    return !![];
}
catch (_0x28a109) {
    return ![];
} }, personajes = _0x34afcc[_0x465be3(0xf0)]('./lib/characters.json') ? JSON[_0x465be3(0x10d)](_0x34afcc[_0x465be3(0x107)](_0x465be3(0x111), _0x465be3(0x115))) : [], contarTotalPersonajes = () => personajes[_0x465be3(0x100)], ITEMS_PER_PAGE = 0xa, mostrarInventario = async (_0x755e99, _0x9694c, _0x1c1aba, _0x49085a, _0x237cbe) => { const _0x206f32 = _0x465be3, _0x56f2eb = _0x9694c[_0x206f32(0x105)], { characters: _0x470a5b, totalRwcoins: _0x30533b } = _0x1c1aba[_0x206f32(0x117)][_0x56f2eb] || { 'characters': [], 'totalRwcoins': 0x0 }, _0x5880ee = _0x470a5b['length'], _0x6ec0b0 = Math[_0x206f32(0x10e)](_0x5880ee / ITEMS_PER_PAGE); _0x237cbe = Math[_0x206f32(0x109)](0x1, Math[_0x206f32(0x11f)](_0x237cbe, _0x6ec0b0)); const _0x2b05f0 = (_0x237cbe - 0x1) * ITEMS_PER_PAGE, _0x584ed0 = _0x2b05f0 + ITEMS_PER_PAGE, _0x14446e = _0x470a5b[_0x206f32(0x118)](_0x2b05f0, _0x584ed0); let _0x15c30f = new Set(); Object['values'](_0x1c1aba[_0x206f32(0x117)])['forEach'](_0xdac8be => { const _0x1ea317 = _0x206f32; _0xdac8be[_0x1ea317(0x10a)]['forEach'](_0x48d3da => _0x15c30f[_0x1ea317(0x11d)](_0x48d3da[_0x1ea317(0xf7)])); }); let _0xf2c0e1 = personajes['filter'](_0x10e678 => !_0x15c30f[_0x206f32(0xee)](_0x10e678[_0x206f32(0xf7)])), _0x46724b = _0xf2c0e1['length']; const _0x1ec19d = '*╭\u1680̵݁\u1680̵݂\u1680̵݁\u1680̵݂\u1680̵\u1680̵݂ᷟ\u1680̵ͤ\u1680̵݂ᷚ\u1680̵ͧ\u1680̵݂ͫ\u1680̵ͥ\u1680̵݂ᷠ\u1680̵݂̄\u1680̵݂\u1680̵ᷨ\u1680̵݂ͦ\u1680̵ͭ\u1680̵݂̄\u1680̵\u1680̵݂ᷟ\u1680̵ͩ݁\u1680̵݂\u1680̵݁\u1680̵݂\u1680̵݁\u1680̵݂╼*\x0a│\x20𝑻𝑼\x20𝑰𝑵𝑽𝑬𝑵𝑻𝑨𝑹𝑰𝑶!\x0a│𝙏𝙪𝙨\x20𝙋𝙚𝙧𝙨𝙤𝙣𝙖𝙟𝙚𝙨\x0a⎆\x20' + _0x5880ee + _0x206f32(0x11e) + _0x46724b + '\x20de\x20' + _0x49085a + _0x206f32(0xf5) + (_0x5880ee / _0x49085a * 0x64)['toFixed'](0x2) + _0x206f32(0x10c) + _0x30533b + '\x0a*╰┅┄̵̇┈̶̣┄̵̇┈̶̣┄̵̇┄̶̣┈̵̇┄̶̣┄̵̇┈̶̣┄̵̇┈̶̣┄̵̇┈̶̣┅╼*\x0a𝙏𝙪𝙨\x20𝙋𝙚𝙧𝙨𝙤𝙣𝙖𝙟𝙚𝙨:\x0a' + _0x14446e['map']((_0x11c3b8, _0x1d3bb8) => '⎆\x20' + (_0x2b05f0 + _0x1d3bb8 + 0x1) + '.\x20' + _0x11c3b8[_0x206f32(0xf7)])[_0x206f32(0xfe)]('\x0a') + _0x206f32(0x11b) + _0x237cbe + '\x20𝙙𝙚\x20' + _0x6ec0b0; await _0x755e99[_0x206f32(0xf3)](_0x9694c['chat'], _0x1ec19d, _0x9694c); };
let handler = async (_0x24b68c, { conn: _0x262dc5, usedPrefix: _0xf665fd, command: _0x288b23 }) => { const _0x473c6d = _0x465be3, _0x2cb89f = _0x24b68c[_0x473c6d(0x105)], _0x32144a = _0x24b68c[_0x473c6d(0x101)]; let _0x38ac0e = obtenerDatos(); !_0x38ac0e[_0x473c6d(0xf1)][_0x32144a] && (_0x38ac0e['chats'][_0x32144a] = { 'usuarios': {}, 'personajesReservados': [] }); const _0x4ff84a = _0x38ac0e[_0x473c6d(0xf1)][_0x32144a]; if (!verifi()) {
    await _0x262dc5[_0x473c6d(0xf3)](_0x24b68c['chat'], _0x473c6d(0x110), _0x24b68c, rcanal);
    return;
} if (!_0x4ff84a[_0x473c6d(0x117)][_0x2cb89f] || _0x4ff84a[_0x473c6d(0x117)][_0x2cb89f][_0x473c6d(0x10a)][_0x473c6d(0x100)] === 0x0) {
    _0x262dc5[_0x473c6d(0xf3)](_0x24b68c['chat'], '*𝑵𝒐\x20𝒕𝒊𝒆𝒏𝒆𝒔\x20𝒏𝒊𝒏𝒈𝒖𝒏\x20𝒐𝒃𝒋𝒆𝒕𝒐\x20𝒆𝒏\x20𝒕𝒖\x20𝒊𝒏𝒗𝒆𝒏𝒕𝒂𝒓𝒊𝒐\x20😹🫵!*', _0x24b68c, rcanal);
    return;
} let _0x35e5d6 = contarTotalPersonajes(); const _0x280067 = _0x4ff84a[_0x473c6d(0x117)][_0x2cb89f][_0x473c6d(0x10a)][_0x473c6d(0x100)], _0x56b212 = Math[_0x473c6d(0x10e)](_0x280067 / ITEMS_PER_PAGE); _0x262dc5[_0x473c6d(0xfb)] = _0x262dc5[_0x473c6d(0xfb)] || {}, _0x262dc5['session'][_0x32144a] = _0x262dc5[_0x473c6d(0xfb)][_0x32144a] || {}, _0x262dc5[_0x473c6d(0xfb)][_0x32144a][_0x473c6d(0xec)] = _0x262dc5[_0x473c6d(0xfb)][_0x32144a][_0x473c6d(0xec)] || 0x1; let _0x1cfc85 = _0x262dc5['session'][_0x32144a][_0x473c6d(0xec)]; if (_0x288b23 === _0x473c6d(0xf8) || _0x288b23 === 'next' || _0x288b23 === 'siguiente')
    _0x1cfc85 = Math[_0x473c6d(0x11f)](_0x1cfc85 + 0x1, _0x56b212);
else
    (_0x288b23 === _0x473c6d(0x112) || _0x288b23 === _0x473c6d(0xef) || _0x288b23 === _0x473c6d(0x114)) && (_0x1cfc85 = Math[_0x473c6d(0x109)](_0x1cfc85 - 0x1, 0x1)); _0x262dc5[_0x473c6d(0xfb)][_0x32144a][_0x473c6d(0xec)] = _0x1cfc85, await mostrarInventario(_0x262dc5, _0x24b68c, _0x4ff84a, _0x35e5d6, _0x1cfc85); };
handler['help'] = [_0x465be3(0xf2)], handler['tags'] = [_0x465be3(0xfa)], handler[_0x465be3(0x106)] = [_0x465be3(0xf2), _0x465be3(0x108), _0x465be3(0xf8), 'next', _0x465be3(0x116), _0x465be3(0x114), _0x465be3(0xef), _0x465be3(0x112), 'ob'];
export default handler;
//# sourceMappingURL=rollwaifu-obtenidos.js.map