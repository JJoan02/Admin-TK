function _0x3b14() { const _0x2e11ae = ['repository', '*\x20ha\x20sido\x20eliminada\x20de\x20tus\x20obtenidos.', 'chats', '💥\x20Debes\x20especificar\x20la\x20waifu\x20a\x20eliminar.', 'delwaifu', 'value', '26FvGDCm', 'stringify', '💥\x20No\x20se\x20encontró\x20la\x20waifu\x20', '1737934jrqvnv', './package.json', 'gacha', 'parse', 'writeFileSync', 'data.json', 'https://raw.githubusercontent.com/David-Chian/Megumin-Bot-MD/main/lib/characters.json', '\x20no\x20está\x20reclamado\x20por\x20ti.', 'name', 'length', '18xvCpuU', '776LLnNQv', '❤️‍🔥\x20No\x20tienes\x20waifus\x20reclamadas.', 'register', '233266gOPdsy', 'trim', 'error', 'existsSync', 'chat', 'characters', 'reply', 'Error\x20al\x20leer\x20characters.json:', '38013tLAtCf', '☁️\x20Comando\x20no\x20disponible\x20por\x20el\x20momento.', 'Megumin-Bot-MD', 'readFileSync', 'usuarios', '55139QAmNJW', 'utf-8', 'splice', '❤️‍🔥\x20La\x20waifu\x20*', 'git+https://github.com/David-Chian/Megumin-Bot-MD.git', '415hygMDy', 'json', 'toLowerCase', 'url', '1873900UwOMOv', 'delchar', 'totalRwcoins', 'findIndex', '198152uMtBxr', 'deletewaifu', '27AwjJme', 'command', 'tags']; _0x3b14 = function () { return _0x2e11ae; }; return _0x3b14(); }
const _0x154928 = _0x515e;
(function (_0x5f52ae, _0x8c1b48) { const _0xe901e4 = _0x515e, _0x52052c = _0x5f52ae(); while (!![]) {
    try {
        const _0xf65eb9 = parseInt(_0xe901e4(0x193)) / 0x1 + -parseInt(_0xe901e4(0x1b8)) / 0x2 * (parseInt(_0xe901e4(0x19b)) / 0x3) + parseInt(_0xe901e4(0x190)) / 0x4 * (-parseInt(_0xe901e4(0x1a5)) / 0x5) + -parseInt(_0xe901e4(0x18f)) / 0x6 * (-parseInt(_0xe901e4(0x1a0)) / 0x7) + -parseInt(_0xe901e4(0x1ad)) / 0x8 * (-parseInt(_0xe901e4(0x1af)) / 0x9) + -parseInt(_0xe901e4(0x1a9)) / 0xa + parseInt(_0xe901e4(0x1bb)) / 0xb;
        if (_0xf65eb9 === _0x8c1b48)
            break;
        else
            _0x52052c['push'](_0x52052c['shift']());
    }
    catch (_0x23bbcb) {
        _0x52052c['push'](_0x52052c['shift']());
    }
} }(_0x3b14, 0x1d897));
import _0x56709a from 'fs';
import _0x56967d from 'node-fetch';
const obtenerDatos = () => { const _0x81982e = _0x515e; return _0x56709a[_0x81982e(0x196)]('data.json') ? JSON[_0x81982e(0x1be)](_0x56709a[_0x81982e(0x19e)](_0x81982e(0x18a), _0x81982e(0x1a1))) : { 'chats': {} }; }, guardarDatos = _0x420c6a => { const _0x459cd3 = _0x515e; _0x56709a[_0x459cd3(0x1bf)](_0x459cd3(0x18a), JSON[_0x459cd3(0x1b9)](_0x420c6a, null, 0x2)); }, obtenerPersonajes = async () => { const _0x58e6f6 = _0x515e; try {
    const _0x484334 = await _0x56967d(_0x58e6f6(0x18b));
    return await _0x484334[_0x58e6f6(0x1a6)]();
}
catch (_0x3e9ab7) {
    return console[_0x58e6f6(0x195)](_0x58e6f6(0x19a), _0x3e9ab7), [];
} }, isMeguminBotMD = () => { const _0x132c33 = _0x515e; try {
    const _0xac54d4 = JSON['parse'](_0x56709a[_0x132c33(0x19e)](_0x132c33(0x1bc), _0x132c33(0x1a1)));
    if (_0xac54d4[_0x132c33(0x18d)] !== _0x132c33(0x19d))
        return ![];
    if (_0xac54d4[_0x132c33(0x1b2)][_0x132c33(0x1a8)] !== _0x132c33(0x1a4))
        return ![];
    return !![];
}
catch (_0x4e43d4) {
    return ![];
} };
let handler = async (_0x37cda1, { conn: _0x237e1f, args: _0x5ea25e }) => { const _0x5bf6dd = _0x515e; if (!isMeguminBotMD()) {
    await _0x37cda1[_0x5bf6dd(0x199)](_0x5bf6dd(0x19c));
    return;
} if (_0x5ea25e[_0x5bf6dd(0x18e)] < 0x1) {
    _0x237e1f[_0x5bf6dd(0x199)](_0x37cda1['chat'], _0x5bf6dd(0x1b5), _0x37cda1);
    return;
} let _0x2a9241 = _0x5ea25e['join']('\x20')[_0x5bf6dd(0x1a7)](); const _0x4b7498 = _0x37cda1['sender'], _0x182228 = _0x37cda1['chat'], _0xe6ce67 = obtenerDatos(), _0x3317e5 = await obtenerPersonajes(); !_0xe6ce67['chats'][_0x182228] && (_0xe6ce67[_0x5bf6dd(0x1b4)][_0x182228] = { 'usuarios': {}, 'personajesReservados': [] }); let _0x241381 = _0xe6ce67[_0x5bf6dd(0x1b4)][_0x182228][_0x5bf6dd(0x19f)][_0x4b7498]; if (!_0x241381 || _0x241381[_0x5bf6dd(0x198)][_0x5bf6dd(0x18e)] === 0x0) {
    _0x237e1f['reply'](_0x37cda1[_0x5bf6dd(0x197)], _0x5bf6dd(0x191), _0x37cda1);
    return;
} let _0x5327de = _0x241381[_0x5bf6dd(0x198)][_0x5bf6dd(0x1ac)](_0x5f09b1 => _0x5f09b1[_0x5bf6dd(0x18d)][_0x5bf6dd(0x1a7)]() === _0x2a9241[_0x5bf6dd(0x1a7)]()[_0x5bf6dd(0x194)]()); if (_0x5327de === -0x1) {
    _0x237e1f['reply'](_0x37cda1[_0x5bf6dd(0x197)], '💥\x20' + _0x2a9241 + _0x5bf6dd(0x18c), _0x37cda1);
    return;
} let _0xbcb4de = _0x3317e5['find'](_0x14c9d9 => _0x14c9d9[_0x5bf6dd(0x18d)]['toLowerCase']() === _0x2a9241['toLowerCase']()[_0x5bf6dd(0x194)]()); if (!_0xbcb4de) {
    _0x237e1f['reply'](_0x37cda1['chat'], _0x5bf6dd(0x1ba) + _0x2a9241 + '.', _0x37cda1);
    return;
} _0x241381[_0x5bf6dd(0x198)][_0x5bf6dd(0x1a2)](_0x5327de, 0x1), _0x241381['characterCount']--, _0x241381[_0x5bf6dd(0x1ab)] -= _0xbcb4de[_0x5bf6dd(0x1b7)], _0xe6ce67[_0x5bf6dd(0x1b4)][_0x182228][_0x5bf6dd(0x19f)][_0x4b7498] = _0x241381, guardarDatos(_0xe6ce67), _0x237e1f[_0x5bf6dd(0x199)](_0x37cda1[_0x5bf6dd(0x197)], _0x5bf6dd(0x1a3) + _0xbcb4de[_0x5bf6dd(0x18d)] + _0x5bf6dd(0x1b3), _0x37cda1); };
handler['help'] = ['delchar\x20<personaje>'], handler[_0x154928(0x1b1)] = [_0x154928(0x1bd)], handler[_0x154928(0x1b0)] = [_0x154928(0x1ae), _0x154928(0x1aa), _0x154928(0x1b6)], handler[_0x154928(0x192)] = !![];
function _0x515e(_0x57dbf1, _0x3b2a4e) { const _0x3b1489 = _0x3b14(); return _0x515e = function (_0x515e19, _0x5b7811) { _0x515e19 = _0x515e19 - 0x18a; let _0x3cc670 = _0x3b1489[_0x515e19]; return _0x3cc670; }, _0x515e(_0x57dbf1, _0x3b2a4e); }
export default handler;
//# sourceMappingURL=rollwaifu-delchar.js.map